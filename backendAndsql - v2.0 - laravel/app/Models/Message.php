<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use function PHPUnit\Framework\isNull;


/**
 * App\Models\Message
 *
 * @property int $id
 * @property string|null $message
 * @property string|null $pic
 * @property int|null $to_id
 * @property int|null $status
 * @property int|null $user_id
 * @property int|null $post_id
 * @property string|null $mode
 * @property \Illuminate\Support\Carbon|null $created_at
 * @property \Illuminate\Support\Carbon|null $updated_at
 * @method static \Illuminate\Database\Eloquent\Builder|Message newModelQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|Message newQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|Message query()
 * @method static \Illuminate\Database\Eloquent\Builder|Message whereCreatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Message whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Message whereMessage($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Message whereMode($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Message wherePic($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Message whereStatus($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Message whereToId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Message whereUpdatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Message whereUserId($value)
 * @mixin \Eloquent
 */
class Message extends Model
{
    use HasFactory;

    public mixed $extendFields = null;

    public int $post_id;
    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'user_id',
        'to_id',
        'message',
        'mode',
        'pic',
    ];

    public function __construct($jsonMessage = null ){
        if($jsonMessage!=null){
            $this->fill([
                'mode' => $jsonMessage->mode,
                'to_id' => $jsonMessage->to_id,
                'user_id' => $jsonMessage->user_id,
                'message' => $jsonMessage->message,
                'status' => 0,
                'pic' => $jsonMessage->pic
            ]);
            $this->post_id = $jsonMessage->post_id;
        }
    }

    public function toArray(): array
    {
        $arr = parent::toArray(); // TODO: Change the autogenerated stub
        if($this->user !==null ){
            $arr['userInfo'] = $this->user->toArray();
        }
        if($this->extendFields !==null) {
            $arr['extendField'] = $this->extendFields;
        }
        return $arr;
    }


}
